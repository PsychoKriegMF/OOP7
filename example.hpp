#pragma once

#ifndef EXAMPLE_HPP
#define	EXAMPLE_HPP


//весь перечень полей и методов должен быть в файле заголовка
class Example {
public:
	//конструктор и деструкторподчиняются тем же правидам что и остальные методы класса. Но если это необходимо, их можно просто объявить как реализуемые компилятором
	Example() :a(0), b(0.) {}
	~Example() = default;// деструктор создаст компилятор

	//все методы классов по умолчанию помечаются компилятором как встраиваемые функции (inline)
	int GetA()const {
		return a; // короткие методы можно оставлять в заголовочном файле
	}

	//методы класса, чья реализация отделена от объявления теряют преписку inline со стороны компилятора
	float Workload()const;
	//функция Workload содержит цикл - это 100% гарантия того, что компилятор не сможет ее встроить , а значит ее вынос в срр выгоден для работы над проектом

private:
	int a;
	float b;

};

//перечень операций которые гарантированно надо выносить в срр:
// - работа с ресурсами системы
// - работа с объектами других классов
// -  
//



#endif 
